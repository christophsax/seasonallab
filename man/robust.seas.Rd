% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/robust.seas.R
\name{robust.seas}
\alias{robust.seas}
\title{A Robust Version of \code{seas} that \emph{Always} Works (Experimental)}
\usage{
robust.seas(...)
}
\arguments{
\item{...}{arguments passed on to \code{\link{seas}}.}
}
\value{
returns an object of class \code{"seas"}.
}
\description{
\code{robust.seas} has exactly the same usage as \code{\link{seas}}, the main 
function of seasonal, but will always work. If \code{seas} is failing, 
\code{robust.seas} tries an an alternative specification, and returns a 
message. \code{robust.seas} currently works with all 3000+ series of the M3 
forecast competition.
}
\details{
If \code{seas} fails, \code{robust.seas} tries the following:

\enumerate{
\item adjusting invalid start year
\item increasing \code{maxiter} to 10000 (if suggested in the error)
\item switch to X-11
\item fix model to (0 1 1)(0 1 1)
\item turn off AIC testing
\item turn off outlier detection
}

If \code{robust.seas} is applied to annual series (in which case you do not
need seasonal adjustment), it will proceed slightly different:

\enumerate{
\item adjusting invalid start year
\item ensure SEATS, X11 and AIC testing are off
\item turn off outlier detection
\item fix model to (1 1 0)
}

If it still fails, it will return an error, along with the suggestion to post the example on:
\url{https://github.com/christophsax/seasonal/wiki/Breaking-Examples-(and-Possible-Solutions)}.
}
\examples{
\dontrun{
 
x <- ts(1:40)  # an annual time series with an invalid start year

# not working
seas(x)

# working
robust.seas(x)


### X-13 in the  IJF-M3 forecast competition

# Original analysis by Peter Ellis
# http://ellisp.github.io/blog/2015/12/21/m3-and-x13/

library(Mcomp)     # IJF-M3 forecast competition data
library(parallel)  # part of R base, but needs to be loaded

# using cluster parallelization, which also works on Windows 
# (on Linux and Mac, you could simply use mclapply)

# a) set up cluster
cl <- makeCluster(detectCores())

# b) load 'seasonal' and 'Mcomp' for each node
clusterEvalQ(cl, {library(seasonal); library(Mcomp)})

# c) run in parallel (60 sec on an older Macbook Pro with 8 cores)
ff <- function(e){
  m <- robust.seas(e$x, forecast.save = "fct", forecast.maxlead = 18, seats = NULL)
  series(m, "forecast.forecasts")[, 1]
}
lx13 <- parLapply(cl, M3, ff)

# d) stop the cluster
stopCluster(cl)

}
}
\seealso{
\code{\link{seas}} for the main function of seasonal.
}

